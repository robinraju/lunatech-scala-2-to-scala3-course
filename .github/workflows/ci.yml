name: Scala Course CI

on:
  push:
    tags: '*'
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate_course:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Course Repo
        uses: actions/checkout@v2
        with:
          path: course-repo
          # fetch-depth: 0 indicates all history. (CMT requires them)
          fetch-depth: 0
        
      - name: Setup Course Management Tools
        uses: robinraju/release-downloader@v1-beta
        with:
          repository: eloots/course-management-tools
          latest: true
          fileName: "course-management-tools.zip"
          out-file-path: "."
        run: |
          unzip course-management-tools.zip
          echo "::add-path::$GITHUB_WORKSPACE/course-management-tools/bin"
      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      
      - name: Cache Ivy
        uses: actions/cache@v2
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-ivy--${{ hashFiles('**/build.sbt') }}
          restore-keys: |
            ${{ runner.os }}-ivy-
            ${{ runner.os }}-
            
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: ~/.sbt            
          key: ${{ runner.os }}-sbt-${{ hashFiles('project/**') }}
          restore-keys: |
            ${{ runner.os }}-sbt-
            ${{ runner.os }}-
      
      - name: Generate Tests Script using CMT
        run: |
          git config --global user.email "no-reply@lunatech.com"
          git config --global user.name "Lunatech Labs"
          cmt-mainadm -dot -t ../runTests $GITHUB_WORKSPACE/course-repo
     
      - name: Run Tests
        run: |
          chmod +x runTests
          ./runTests
          
  create_release:
    runs-on: ubuntu-latest
    needs: [validate_course]
    # Release gets triggered only on creating new tags
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
    
    steps:
          
      - name: Checkout Course Repo
        uses: actions/checkout@v2
        with:
          path: lunatech-scala-2-to-scala3-course
          fetch-depth: 0
          
      - name: Setup Course Management Tools
        uses: robinraju/release-downloader@v1-beta
        with:
          repository: eloots/course-management-tools
          latest: true
          fileName: "course-management-tools.zip"
          out-file-path: "."
        run: |
          unzip course-management-tools.zip
          echo "::add-path::$GITHUB_WORKSPACE/course-management-tools/bin"              
      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      
      - name: Cache Ivy
        uses: actions/cache@v2
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-ivy--${{ hashFiles('**/build.sbt') }}
          restore-keys: |
            ${{ runner.os }}-ivy-
            ${{ runner.os }}-
      
      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: ~/.sbt            
          key: ${{ runner.os }}-sbt-${{ hashFiles('project/**') }}
          restore-keys: |
            ${{ runner.os }}-sbt-            
            ${{ runner.os }}-
      
      - name: Studentify Repo
        run: |
          mkdir -p studentified
          git config --global user.email "no-reply@lunatech.com"
          git config --global user.name "Lunatech Labs"
          cmt-studentify -dot -g ../lunatech-scala-2-to-scala3-course ../studentified
          (cd studentified && exec zip -r lunatech-scala-2-to-scala3-course-student.zip lunatech-scala-2-to-scala3-course)  
          
      - name: Linearize Repo
        run: |
          mkdir -p linearized
          cmt-linearize -dot ../lunatech-scala-2-to-scala3-course ../linearized
          mv linearized/lunatech-scala-2-to-scala3-course linearized/lunatech-scala-2-to-scala3-course-linearized
          (cd linearized && exec zip -r lunatech-scala-2-to-scala3-course-linearized.zip lunatech-scala-2-to-scala3-course-linearized)
        
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Studentified repo to Github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # release created from previous step
          asset_path: ./studentified/lunatech-scala-2-to-scala3-course-student.zip
          asset_name: lunatech-scala-2-to-scala3-course-student.zip
          asset_content_type: application/zip
     
      - name: Upload Linearized repo to Github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # release created from previous step
          asset_path: ./linearized/lunatech-scala-2-to-scala3-course-linearized.zip
          asset_name: lunatech-scala-2-to-scala3-course-linearized.zip
          asset_content_type: application/zip
