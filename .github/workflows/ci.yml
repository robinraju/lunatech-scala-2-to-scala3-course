name: Scala Course CI

on:
  push:
    branches: [ exercises-master ]
  pull_request:
    branches: [ exercises-master ]

jobs:
#   test_course:
#     runs-on: ubuntu-latest

#     steps:

#       - name: Checkout Course Repo
#         uses: actions/checkout@v2
#         with:
#           path: course-master
#           fetch-depth: 0
        
#       - name: Checkout Course Management Tools
#         uses: actions/checkout@v2
#         with:
#           repository: lightbend/course-management-tools
#           path: CMT
      
#       - name: Set up JDK 11
#         uses: actions/setup-java@v1
#         with:
#           java-version: 11
      
#       - name: Cache Ivy and SBT
#         uses: actions/cache@v2
#         with:
#           path: | 
#             ~/.ivy2/cache
#             ~/.sbt            
#           key: ${{ runner.os }}-sbt-ivy-cache-${{ hashFiles('project/**') }}
#           restore-keys: |
#             ${{ runner.os }}-sbt-ivy-cache-
#             ${{ runner.os }}-
      
#       - name: Generate Tests Script using CMT
#         run: |
#           (cd CMT/ && exec sbt "masteradm -dot -t ../runTests $GITHUB_WORKSPACE/course-master")
     
#       - name: Run Tests
#         run: |
#           chmod +x runTests
#           ./runTests
          
  create_release:
    runs-on: ubuntu-latest
    
    steps:
      
      - name: Checkout Course Management Tools
        uses: actions/checkout@v2
        with:
          repository: lightbend/course-management-tools
          path: CMT
          
      - name: Checkout Course Repo
        uses: actions/checkout@v2
        with:
          path: lunatech-scala-2-to-scala3-course
          fetch-depth: 0          
      
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      
      - name: Cache Ivy
        uses: actions/cache@v2
        with:
          path: ~/.ivy2/cache
          key: ${{ runner.os }}-ivy--${{ hashFiles('**/build.sbt') }}
          restore-keys: |
            ${{ runner.os }}-ivy-
            ${{ runner.os }}-

      - name: Cache SBT
        uses: actions/cache@v2
        with:
          path: ~/.sbt            
          key: ${{ runner.os }}-sbt-${{ hashFiles('project/**') }}
          restore-keys: |
            ${{ runner.os }}-sbt-            
            ${{ runner.os }}-
      
      - name: Studentify Repo
        run: |
          mkdir -p studentified
          (cd CMT/ && exec sbt "studentify -dot ../lunatech-scala-2-to-scala3-course ../studentified")
          zip -r studentified/lunatech-scala-2-to-scala3-course.zip studentified/lunatech-scala-2-to-scala3-course  
          
      - name: Linearize Repo
        run: |
          mkdir -p linearized
          git config --global user.email "no-reply@lunatech.com"
          git config --global user.name "Lunatech"
          (cd CMT/ && exec sbt "linearize -dot ../lunatech-scala-2-to-scala3-course ../linearized")
          zip -r linearized/lunatech-scala-2-to-scala3-course.lin.zip linearized/lunatech-scala-2-to-scala3-course    
      
      - name:  List directory
        run: |
          ls -l
          echo "PWD: $(pwd)"
          (cd studentified && exec ls -l)
          (cd linearized && exec ls -l)
        
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Studentified repo to Github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # release created from previous step
          asset_path: ./studentified/lunatech-scala-2-to-scala3-course.zip
          asset_name: lunatech-scala-2-to-scala3-course.zip
          asset_content_type: application/zip
     
      - name: Upload Linearized repo to Github release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # release created from previous step
          asset_path: ./linearized/lunatech-scala-2-to-scala3-course.lin.zip
          asset_name: lunatech-scala-2-to-scala3-course.lin.zip
          asset_content_type: application/zip
          
